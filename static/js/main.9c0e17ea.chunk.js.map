{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","prodIdName","uuidv4","prodIdNumber","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","contacts","props","onAddContact","resetForm","this","className","styles","form","onSubmit","label","htmlFor","input","id","type","pattern","title","required","onChange","button","Component","ContactList","onDeleteContact","section","list","map","item","onClick","Filter","App","filter","obj","find","contact","toLowerCase","alert","prevState","contactId","onChangeFilter","currentTarget","normalizedFilter","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c0e17ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__208i4\",\"input\":\"Form_input__2k1fE\",\"label\":\"Form_label__Ok8tq\",\"button\":\"Form_button__1n1jq\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Form/Form.module.css';\r\n\r\nexport class Form extends Component {\r\n  prodIdName = uuidv4();\r\n  prodIdNumber = uuidv4();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contacts = {\r\n      name,\r\n      number,\r\n    };\r\n    this.setState({ contacts });\r\n    this.props.onAddContact(contacts);\r\n    this.resetForm();\r\n  };\r\n\r\n  //очистка формы\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, prodIdName, handleChange, prodIdNumber } = this;\r\n    return (\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label className={styles.label} htmlFor={prodIdName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          id={prodIdName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n        <label className={styles.label} htmlFor={prodIdNumber}>\r\n          Number\r\n        </label>\r\n        <input\r\n          className={styles.input}\r\n          id={prodIdNumber}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  number: PropTypes.number,\r\n  name: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <div className={styles.section}>\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.item} key={id}>\r\n          <p className={styles.name}> {name}:</p>\r\n          <p className={styles.number}>{number}</p>\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.any.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n\r\n/* import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map(contact => (\r\n      <li key={contact.id}>\r\n        {contact.name + ':' + contact.number}\r\n        {\r\n          <button\r\n            type=\"button\"\r\n            name=\"delete\"\r\n            onClick={() => onRemoveContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);*/\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../Filter/Filter.module.css';\r\n\r\nconst Filter = ({ contacts, onChange }) => (\r\n  <div>\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={contacts}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  contacts: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Form } from './components/Form/Form';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  onAddContact = obj => {\r\n    const contacts = {\r\n      id: uuidv4(),\r\n      name: obj.name,\r\n      number: obj.number,\r\n    };\r\n    /* console.log(contacts.name);\r\n    console.log(obj.name); */\r\n    if (\r\n      this.state.contacts.find(\r\n        contact => contacts.name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${contacts.name} is already in contacts`);\r\n    } else\r\n      this.setState(prevState => {\r\n        return {\r\n          contacts: [contacts, ...prevState.contacts],\r\n        };\r\n      });\r\n  };\r\n\r\n  onDeleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  onChangeFilter = e => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  /* removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  }; */\r\n\r\n  render() {\r\n    const { onAddContact, onChangeFilter, onDeleteContact } = this;\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    const visibleContacts = this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return (\r\n      <section>\r\n        <h2>Phonebook</h2>\r\n        <Form onAddContact={onAddContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter contacts={this.state.filter} onChange={onChangeFilter} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2_dJv\",\"item\":\"ContactList_item__1CCT9\",\"name\":\"ContactList_name__2xzM8\",\"number\":\"ContactList_number__2yN1O\",\"button\":\"ContactList_button__1efQH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1DLZu\",\"label\":\"Filter_label__3B_lL\"};"],"sourceRoot":""}